gunit qicvg;

options {
  TreeAdaptor = qicvg.QicvgTree;
}

@header{
  package qicvg;
}

prog: 
<<
polreg poligono (400,500x,50,6,white,white,1) 
polreg poligono (400,600,70,5,red,white,1)
>> FAIL

//double_style:
<<
style doppiostile errore (black,#FFF,1)

style doppiostile (red,#FFF,2)
>> FAIL

//unexistent_style:
"rect rettangolo(100,100,250,200,deepblue)" FAIL


//unexistent_id:
"circle provaid (idinesistente.x,100,50)" FAIL

//unexistent_attribute:
"circle cerchio (rettangolo.cx,rettangolo.y,40)" FAIL

//unknown_token:
"~~" FAIL

//container:
<<container frattale (0,0)[
line linea1 (frattale.x,frattale.y,frattale.x+1,frattale.y)
frattale frattale1 (frattale.x+1,frattale.y, 0.35, 0.785714285714)
frattale frattale2 (frattale.x,frattale.y+1, 0.35, 0.785714285714)
line linea2 (frattale.x+3,frattale.y,frattale.x+4,frattale.y)
]>> OK

//empty_input:
"" OK

//wrong_comment_delimiter:
"# questo non Ã¨ un commento" FAIL

//empty_lines:
<<



>> OK

//TODO check
//spurious_semicolon:
"path pippo (0,0);" FAIL

//valid_path:
"path pippo (0,0)" OK

//wrong_color:
"path pluto (20,30,#FFFF,blue,3)" FAIL

//starting_newline:
<<
path pippo (0,0)>> OK

//leading_newline:
<<path pippo (0,0)

>> OK

//TODO
//not_sure_about_this:
<<

path pippo (0,0)


path pippo (0,0)


>> OK


